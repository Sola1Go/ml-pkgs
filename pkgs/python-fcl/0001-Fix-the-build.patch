From 77d0450f50b3a7b3bf693fa7ec8063024f74aa3c Mon Sep 17 00:00:00 2001
From: Break Yang <breakds@gmail.com>
Date: Sat, 25 May 2024 12:01:06 -0700
Subject: [PATCH] Fix the build

1. Cython 3.0 does not allow implicit `noexcept`. Adding `noexcept`.
2. Be smart about finding eigen3.
---
 setup.py        | 3 +++
 src/fcl/fcl.pyx | 4 ++--
 2 files changed, 5 insertions(+), 2 deletions(-)

diff --git a/setup.py b/setup.py
index 15e69dd..1c44212 100644
--- a/setup.py
+++ b/setup.py
@@ -38,6 +38,9 @@ def get_include_dirs():
     import numpy
 
     include_dirs.append(numpy.get_include())
+    eigen3_extra_include_dir = os.getenv("EIGEN3_INCLUDE_DIR")
+    if eigen3_extra_include_dir is not None:
+        include_dirs.append(eigen3_extra_include_dir)
     return include_dirs
 
 
diff --git a/src/fcl/fcl.pyx b/src/fcl/fcl.pyx
index 7738bad..169bbb2 100644
--- a/src/fcl/fcl.pyx
+++ b/src/fcl/fcl.pyx
@@ -761,10 +761,10 @@ cdef class DistanceFunction:
         (&dist)[0] = <double?> py_r[1]
         return <bool?> py_r[0]
 
-cdef inline bool CollisionCallBack(defs.CollisionObjectd*o1, defs.CollisionObjectd*o2, void*cdata):
+cdef inline bool CollisionCallBack(defs.CollisionObjectd*o1, defs.CollisionObjectd*o2, void*cdata) noexcept:
     return (<CollisionFunction> cdata).eval_func(o1, o2)
 
-cdef inline bool DistanceCallBack(defs.CollisionObjectd*o1, defs.CollisionObjectd*o2, void*cdata, double& dist):
+cdef inline bool DistanceCallBack(defs.CollisionObjectd*o1, defs.CollisionObjectd*o2, void*cdata, double& dist) noexcept:
     return (<DistanceFunction> cdata).eval_func(o1, o2, dist)
 
 
-- 
2.42.0

